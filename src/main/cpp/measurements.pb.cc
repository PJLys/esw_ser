// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: measurements.proto

#include "measurements.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace esw {
        template <typename>
PROTOBUF_CONSTEXPR pMeasurementInfo::pMeasurementInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.measurer_name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct pMeasurementInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR pMeasurementInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~pMeasurementInfoDefaultTypeInternal() {}
  union {
    pMeasurementInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 pMeasurementInfoDefaultTypeInternal _pMeasurementInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR pDataset_pRecord::pDataset_pRecord(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.values_)*/ {},
      /*decltype(_impl_.data_type_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct pDataset_pRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR pDataset_pRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~pDataset_pRecordDefaultTypeInternal() {}
  union {
    pDataset_pRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 pDataset_pRecordDefaultTypeInternal _pDataset_pRecord_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR pDataset::pDataset(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.records_)*/ {},
      /*decltype(_impl_.info_)*/ nullptr,
    } {}
struct pDatasetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR pDatasetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~pDatasetDefaultTypeInternal() {}
  union {
    pDataset _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 pDatasetDefaultTypeInternal _pDataset_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR pResult_Average::pResult_Average(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.value_)*/ 0,
      /*decltype(_impl_.data_type_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct pResult_AverageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR pResult_AverageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~pResult_AverageDefaultTypeInternal() {}
  union {
    pResult_Average _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 pResult_AverageDefaultTypeInternal _pResult_Average_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR pResult::pResult(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.averages_)*/ {},
      /*decltype(_impl_.info_)*/ nullptr,
    } {}
struct pResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR pResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~pResultDefaultTypeInternal() {}
  union {
    pResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 pResultDefaultTypeInternal _pResult_default_instance_;
}  // namespace esw
static ::_pb::Metadata file_level_metadata_measurements_2eproto[5];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_measurements_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_measurements_2eproto = nullptr;
const ::uint32_t TableStruct_measurements_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::esw::pMeasurementInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::esw::pMeasurementInfo, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::esw::pMeasurementInfo, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::esw::pMeasurementInfo, _impl_.measurer_name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::esw::pDataset_pRecord, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::esw::pDataset_pRecord, _impl_.data_type_),
    PROTOBUF_FIELD_OFFSET(::esw::pDataset_pRecord, _impl_.values_),
    PROTOBUF_FIELD_OFFSET(::esw::pDataset, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::esw::pDataset, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::esw::pDataset, _impl_.info_),
    PROTOBUF_FIELD_OFFSET(::esw::pDataset, _impl_.records_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::esw::pResult_Average, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::esw::pResult_Average, _impl_.data_type_),
    PROTOBUF_FIELD_OFFSET(::esw::pResult_Average, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::esw::pResult, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::esw::pResult, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::esw::pResult, _impl_.info_),
    PROTOBUF_FIELD_OFFSET(::esw::pResult, _impl_.averages_),
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::esw::pMeasurementInfo)},
        {11, -1, -1, sizeof(::esw::pDataset_pRecord)},
        {21, 31, -1, sizeof(::esw::pDataset)},
        {33, -1, -1, sizeof(::esw::pResult_Average)},
        {43, 53, -1, sizeof(::esw::pResult)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::esw::_pMeasurementInfo_default_instance_._instance,
    &::esw::_pDataset_pRecord_default_instance_._instance,
    &::esw::_pDataset_default_instance_._instance,
    &::esw::_pResult_Average_default_instance_._instance,
    &::esw::_pResult_default_instance_._instance,
};
const char descriptor_table_protodef_measurements_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\022measurements.proto\022\003esw\"H\n\020pMeasuremen"
    "tInfo\022\n\n\002id\030\001 \001(\005\022\021\n\ttimestamp\030\002 \001(\003\022\025\n\r"
    "measurer_name\030\003 \001(\t\"\225\001\n\010pDataset\022#\n\004info"
    "\030\001 \001(\0132\025.esw.pMeasurementInfo\022&\n\007records"
    "\030\002 \003(\0132\025.esw.pDataset.pRecord\032<\n\007pRecord"
    "\022!\n\tdata_type\030\001 \001(\0162\016.esw.pDataType\022\016\n\006v"
    "alues\030\002 \003(\001\"\223\001\n\007pResult\022#\n\004info\030\001 \001(\0132\025."
    "esw.pMeasurementInfo\022&\n\010averages\030\002 \003(\0132\024"
    ".esw.pResult.Average\032;\n\007Average\022!\n\tdata_"
    "type\030\001 \001(\0162\016.esw.pDataType\022\r\n\005value\030\002 \001("
    "\001*/\n\tpDataType\022\014\n\010DOWNLOAD\020\000\022\n\n\006UPLOAD\020\001"
    "\022\010\n\004PING\020\002B\036\n\032cz.esw.serialization.proto"
    "P\001b\006proto3"
};
static ::absl::once_flag descriptor_table_measurements_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_measurements_2eproto = {
    false,
    false,
    490,
    descriptor_table_protodef_measurements_2eproto,
    "measurements.proto",
    &descriptor_table_measurements_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_measurements_2eproto::offsets,
    file_level_metadata_measurements_2eproto,
    file_level_enum_descriptors_measurements_2eproto,
    file_level_service_descriptors_measurements_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_measurements_2eproto_getter() {
  return &descriptor_table_measurements_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_measurements_2eproto(&descriptor_table_measurements_2eproto);
namespace esw {
const ::google::protobuf::EnumDescriptor* pDataType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_measurements_2eproto);
  return file_level_enum_descriptors_measurements_2eproto[0];
}
bool pDataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class pMeasurementInfo::_Internal {
 public:
};

pMeasurementInfo::pMeasurementInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:esw.pMeasurementInfo)
}
pMeasurementInfo::pMeasurementInfo(const pMeasurementInfo& from) : ::google::protobuf::Message() {
  pMeasurementInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.measurer_name_){},
      decltype(_impl_.timestamp_){},
      decltype(_impl_.id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.measurer_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.measurer_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_measurer_name().empty()) {
    _this->_impl_.measurer_name_.Set(from._internal_measurer_name(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.timestamp_, &from._impl_.timestamp_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.id_) -
    reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.id_));

  // @@protoc_insertion_point(copy_constructor:esw.pMeasurementInfo)
}
inline void pMeasurementInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.measurer_name_){},
      decltype(_impl_.timestamp_){::int64_t{0}},
      decltype(_impl_.id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.measurer_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.measurer_name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
pMeasurementInfo::~pMeasurementInfo() {
  // @@protoc_insertion_point(destructor:esw.pMeasurementInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void pMeasurementInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.measurer_name_.Destroy();
}
void pMeasurementInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void pMeasurementInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.pMeasurementInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.measurer_name_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.id_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* pMeasurementInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 42, 2> pMeasurementInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_pMeasurementInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(pMeasurementInfo, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(pMeasurementInfo, _impl_.id_)}},
    // int64 timestamp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(pMeasurementInfo, _impl_.timestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(pMeasurementInfo, _impl_.timestamp_)}},
    // string measurer_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(pMeasurementInfo, _impl_.measurer_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(pMeasurementInfo, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(pMeasurementInfo, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string measurer_name = 3;
    {PROTOBUF_FIELD_OFFSET(pMeasurementInfo, _impl_.measurer_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\24\0\0\15\0\0\0\0"
    "esw.pMeasurementInfo"
    "measurer_name"
  }},
};

::uint8_t* pMeasurementInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:esw.pMeasurementInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // int64 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_timestamp(), target);
  }

  // string measurer_name = 3;
  if (!this->_internal_measurer_name().empty()) {
    const std::string& _s = this->_internal_measurer_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "esw.pMeasurementInfo.measurer_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.pMeasurementInfo)
  return target;
}

::size_t pMeasurementInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.pMeasurementInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string measurer_name = 3;
  if (!this->_internal_measurer_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_measurer_name());
  }

  // int64 timestamp = 2;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData pMeasurementInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    pMeasurementInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*pMeasurementInfo::GetClassData() const { return &_class_data_; }


void pMeasurementInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<pMeasurementInfo*>(&to_msg);
  auto& from = static_cast<const pMeasurementInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:esw.pMeasurementInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_measurer_name().empty()) {
    _this->_internal_set_measurer_name(from._internal_measurer_name());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void pMeasurementInfo::CopyFrom(const pMeasurementInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.pMeasurementInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool pMeasurementInfo::IsInitialized() const {
  return true;
}

void pMeasurementInfo::InternalSwap(pMeasurementInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.measurer_name_, lhs_arena,
                                       &other->_impl_.measurer_name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(pMeasurementInfo, _impl_.id_)
      + sizeof(pMeasurementInfo::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(pMeasurementInfo, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata pMeasurementInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_measurements_2eproto_getter, &descriptor_table_measurements_2eproto_once,
      file_level_metadata_measurements_2eproto[0]);
}
// ===================================================================

class pDataset_pRecord::_Internal {
 public:
};

pDataset_pRecord::pDataset_pRecord(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:esw.pDataset.pRecord)
}
pDataset_pRecord::pDataset_pRecord(const pDataset_pRecord& from) : ::google::protobuf::Message() {
  pDataset_pRecord* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.values_){from._impl_.values_},
      decltype(_impl_.data_type_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.data_type_ = from._impl_.data_type_;

  // @@protoc_insertion_point(copy_constructor:esw.pDataset.pRecord)
}
inline void pDataset_pRecord::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.values_){arena},
      decltype(_impl_.data_type_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
pDataset_pRecord::~pDataset_pRecord() {
  // @@protoc_insertion_point(destructor:esw.pDataset.pRecord)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void pDataset_pRecord::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.values_.~RepeatedField();
}
void pDataset_pRecord::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void pDataset_pRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.pDataset.pRecord)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_values()->Clear();
  _impl_.data_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* pDataset_pRecord::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> pDataset_pRecord::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_pDataset_pRecord_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated double values = 2;
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(pDataset_pRecord, _impl_.values_)}},
    // .esw.pDataType data_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(pDataset_pRecord, _impl_.data_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(pDataset_pRecord, _impl_.data_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .esw.pDataType data_type = 1;
    {PROTOBUF_FIELD_OFFSET(pDataset_pRecord, _impl_.data_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated double values = 2;
    {PROTOBUF_FIELD_OFFSET(pDataset_pRecord, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* pDataset_pRecord::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:esw.pDataset.pRecord)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .esw.pDataType data_type = 1;
  if (this->_internal_data_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_data_type(), target);
  }

  // repeated double values = 2;
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.pDataset.pRecord)
  return target;
}

::size_t pDataset_pRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.pDataset.pRecord)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double values = 2;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_values_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // .esw.pDataType data_type = 1;
  if (this->_internal_data_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_data_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData pDataset_pRecord::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    pDataset_pRecord::MergeImpl
};
const ::google::protobuf::Message::ClassData*pDataset_pRecord::GetClassData() const { return &_class_data_; }


void pDataset_pRecord::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<pDataset_pRecord*>(&to_msg);
  auto& from = static_cast<const pDataset_pRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:esw.pDataset.pRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  if (from._internal_data_type() != 0) {
    _this->_internal_set_data_type(from._internal_data_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void pDataset_pRecord::CopyFrom(const pDataset_pRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.pDataset.pRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool pDataset_pRecord::IsInitialized() const {
  return true;
}

void pDataset_pRecord::InternalSwap(pDataset_pRecord* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
  swap(_impl_.data_type_, other->_impl_.data_type_);
}

::google::protobuf::Metadata pDataset_pRecord::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_measurements_2eproto_getter, &descriptor_table_measurements_2eproto_once,
      file_level_metadata_measurements_2eproto[1]);
}
// ===================================================================

class pDataset::_Internal {
 public:
  using HasBits = decltype(std::declval<pDataset>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(pDataset, _impl_._has_bits_);
  static const ::esw::pMeasurementInfo& info(const pDataset* msg);
  static void set_has_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::esw::pMeasurementInfo& pDataset::_Internal::info(const pDataset* msg) {
  return *msg->_impl_.info_;
}
pDataset::pDataset(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:esw.pDataset)
}
pDataset::pDataset(const pDataset& from) : ::google::protobuf::Message() {
  pDataset* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.records_){from._impl_.records_},
      decltype(_impl_.info_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_ = new ::esw::pMeasurementInfo(*from._impl_.info_);
  }

  // @@protoc_insertion_point(copy_constructor:esw.pDataset)
}
inline void pDataset::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.records_){arena},
      decltype(_impl_.info_){nullptr},
  };
}
pDataset::~pDataset() {
  // @@protoc_insertion_point(destructor:esw.pDataset)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void pDataset::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.records_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.info_;
}
void pDataset::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void pDataset::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.pDataset)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_records()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* pDataset::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> pDataset::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(pDataset, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_pDataset_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .esw.pDataset.pRecord records = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(pDataset, _impl_.records_)}},
    // .esw.pMeasurementInfo info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(pDataset, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .esw.pMeasurementInfo info = 1;
    {PROTOBUF_FIELD_OFFSET(pDataset, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .esw.pDataset.pRecord records = 2;
    {PROTOBUF_FIELD_OFFSET(pDataset, _impl_.records_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::esw::pMeasurementInfo>()},
    {::_pbi::TcParser::GetTable<::esw::pDataset_pRecord>()},
  }}, {{
  }},
};

::uint8_t* pDataset::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:esw.pDataset)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .esw.pMeasurementInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  // repeated .esw.pDataset.pRecord records = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_records_size()); i < n; i++) {
    const auto& repfield = this->_internal_records().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.pDataset)
  return target;
}

::size_t pDataset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.pDataset)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .esw.pDataset.pRecord records = 2;
  total_size += 1UL * this->_internal_records_size();
  for (const auto& msg : this->_internal_records()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .esw.pMeasurementInfo info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData pDataset::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    pDataset::MergeImpl
};
const ::google::protobuf::Message::ClassData*pDataset::GetClassData() const { return &_class_data_; }


void pDataset::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<pDataset*>(&to_msg);
  auto& from = static_cast<const pDataset&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:esw.pDataset)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_records()->MergeFrom(from._internal_records());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info()->::esw::pMeasurementInfo::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void pDataset::CopyFrom(const pDataset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.pDataset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool pDataset::IsInitialized() const {
  return true;
}

void pDataset::InternalSwap(pDataset* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.records_.InternalSwap(&other->_impl_.records_);
  swap(_impl_.info_, other->_impl_.info_);
}

::google::protobuf::Metadata pDataset::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_measurements_2eproto_getter, &descriptor_table_measurements_2eproto_once,
      file_level_metadata_measurements_2eproto[2]);
}
// ===================================================================

class pResult_Average::_Internal {
 public:
};

pResult_Average::pResult_Average(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:esw.pResult.Average)
}
pResult_Average::pResult_Average(const pResult_Average& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:esw.pResult.Average)
}
inline void pResult_Average::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.value_){0},
      decltype(_impl_.data_type_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
pResult_Average::~pResult_Average() {
  // @@protoc_insertion_point(destructor:esw.pResult.Average)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void pResult_Average::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void pResult_Average::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void pResult_Average::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.pResult.Average)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.data_type_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.data_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* pResult_Average::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> pResult_Average::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_pResult_Average_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // double value = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(pResult_Average, _impl_.value_)}},
    // .esw.pDataType data_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(pResult_Average, _impl_.data_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(pResult_Average, _impl_.data_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .esw.pDataType data_type = 1;
    {PROTOBUF_FIELD_OFFSET(pResult_Average, _impl_.data_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // double value = 2;
    {PROTOBUF_FIELD_OFFSET(pResult_Average, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* pResult_Average::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:esw.pResult.Average)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .esw.pDataType data_type = 1;
  if (this->_internal_data_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_data_type(), target);
  }

  // double value = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  ::uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.pResult.Average)
  return target;
}

::size_t pResult_Average::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.pResult.Average)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double value = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_value = this->_internal_value();
  ::uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 9;
  }

  // .esw.pDataType data_type = 1;
  if (this->_internal_data_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_data_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData pResult_Average::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    pResult_Average::MergeImpl
};
const ::google::protobuf::Message::ClassData*pResult_Average::GetClassData() const { return &_class_data_; }


void pResult_Average::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<pResult_Average*>(&to_msg);
  auto& from = static_cast<const pResult_Average&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:esw.pResult.Average)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_value = from._internal_value();
  ::uint64_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_data_type() != 0) {
    _this->_internal_set_data_type(from._internal_data_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void pResult_Average::CopyFrom(const pResult_Average& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.pResult.Average)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool pResult_Average::IsInitialized() const {
  return true;
}

void pResult_Average::InternalSwap(pResult_Average* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(pResult_Average, _impl_.data_type_)
      + sizeof(pResult_Average::_impl_.data_type_)
      - PROTOBUF_FIELD_OFFSET(pResult_Average, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata pResult_Average::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_measurements_2eproto_getter, &descriptor_table_measurements_2eproto_once,
      file_level_metadata_measurements_2eproto[3]);
}
// ===================================================================

class pResult::_Internal {
 public:
  using HasBits = decltype(std::declval<pResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(pResult, _impl_._has_bits_);
  static const ::esw::pMeasurementInfo& info(const pResult* msg);
  static void set_has_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::esw::pMeasurementInfo& pResult::_Internal::info(const pResult* msg) {
  return *msg->_impl_.info_;
}
pResult::pResult(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:esw.pResult)
}
pResult::pResult(const pResult& from) : ::google::protobuf::Message() {
  pResult* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.averages_){from._impl_.averages_},
      decltype(_impl_.info_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_ = new ::esw::pMeasurementInfo(*from._impl_.info_);
  }

  // @@protoc_insertion_point(copy_constructor:esw.pResult)
}
inline void pResult::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.averages_){arena},
      decltype(_impl_.info_){nullptr},
  };
}
pResult::~pResult() {
  // @@protoc_insertion_point(destructor:esw.pResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void pResult::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.averages_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.info_;
}
void pResult::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void pResult::Clear() {
// @@protoc_insertion_point(message_clear_start:esw.pResult)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_averages()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* pResult::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> pResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(pResult, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_pResult_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .esw.pResult.Average averages = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(pResult, _impl_.averages_)}},
    // .esw.pMeasurementInfo info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(pResult, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .esw.pMeasurementInfo info = 1;
    {PROTOBUF_FIELD_OFFSET(pResult, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .esw.pResult.Average averages = 2;
    {PROTOBUF_FIELD_OFFSET(pResult, _impl_.averages_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::esw::pMeasurementInfo>()},
    {::_pbi::TcParser::GetTable<::esw::pResult_Average>()},
  }}, {{
  }},
};

::uint8_t* pResult::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:esw.pResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .esw.pMeasurementInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  // repeated .esw.pResult.Average averages = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_averages_size()); i < n; i++) {
    const auto& repfield = this->_internal_averages().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:esw.pResult)
  return target;
}

::size_t pResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:esw.pResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .esw.pResult.Average averages = 2;
  total_size += 1UL * this->_internal_averages_size();
  for (const auto& msg : this->_internal_averages()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .esw.pMeasurementInfo info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData pResult::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    pResult::MergeImpl
};
const ::google::protobuf::Message::ClassData*pResult::GetClassData() const { return &_class_data_; }


void pResult::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<pResult*>(&to_msg);
  auto& from = static_cast<const pResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:esw.pResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_averages()->MergeFrom(from._internal_averages());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info()->::esw::pMeasurementInfo::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void pResult::CopyFrom(const pResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:esw.pResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool pResult::IsInitialized() const {
  return true;
}

void pResult::InternalSwap(pResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.averages_.InternalSwap(&other->_impl_.averages_);
  swap(_impl_.info_, other->_impl_.info_);
}

::google::protobuf::Metadata pResult::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_measurements_2eproto_getter, &descriptor_table_measurements_2eproto_once,
      file_level_metadata_measurements_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace esw
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
